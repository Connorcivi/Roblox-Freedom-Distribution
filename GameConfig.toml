# EXAMPLE GAME CONFIGURATION FILE.
# PLEASE REVIEW AND MODIFY IF YOU WISH TO RUN YOUR OWN SERVERS!
# Some arguments are provided as absolute paths and only work on my machine.

[server_assignment]
players.maximum = 4096
players.preferred = 666
instances.count = 1

[game_setup]
# Aliases for "v348" is "2018M", "v463" is "2021E", etc.
roblox_version = '2018M'
place_path = 'c:\Users\USERNAME\Documents\Roblox Files\Baseplate.rbxl'
icon_path = 'C:\Users\USERNAME\Pictures\097050bd37142a4080975bb8e415d2b8.jpg'
name = '666'
description = ''
creator.name = 'ÒÓ'


[server_core]
# Python function `RESULT` which generates an RFD-specific user code if one isn't provided.
# Server maintainers should review the code because it's used by 'eval'.
retrieve_default_user_code = '''
function(tick) -- float -> str
    return string.format('Tick %d', tick)
end
'''

check_user_allowed = '''
function(user_code, ip_addr) -- string -> bool
    print(user_code, 'joined from IP address', ip_addr)
    return true
end
'''

chat_style = 'ClassicAndBubble'
retrieve_avatar_type = '''
function(user_code) -- str -> str
    if _G.avatar_spinner == nil then _G.avatar_spinner = 0 end
    _G.avatar_spinner = _G.avatar_spinner % 2 + 1
    return ({'R15', 'R6'})[_G.avatar_spinner]
end
'''

# Python function `RESULT` which evaluates the player's `Name` value from their RFD-specific user code.
# Server maintainers should review the code because it's used by 'eval'.
retrieve_username = '''
function(user_code) -- str -> str
    return user_code
end
'''

# Python function `RESULT` which evaluates the player's `UserId` value from their RFD-specific user code.
# Server maintainers should review the code because it's used by 'eval'.
retrieve_user_id = '''
function(user_code) -- str -> int
    return math.random(1, 16777216)
end
'''

# Python function `RESULT` which evaluates the player's `AccountAge` value from their RFD-specific user code.
# Server maintainers should review the code because it's used by 'eval'.
retrieve_account_age = '''
function(user_code) -- str -> int
    return 6969
end
'''

# Python function `RESULT` which filters text.
# Server maintainers should review the code because it's used by 'eval'.
filter_text = '''
function(user_code, text)
    return text:gsub('oo','òó'):gsub('OO','ÒÓ'):gsub('ee','èé'):gsub('EE','ÈÉ'):gsub('Roblox','Rōblox'):gsub('ROBLOX','RŌBLOX')
end
'''
